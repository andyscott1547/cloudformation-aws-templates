AWSTemplateFormatVersion: '2010-09-09'
Description: >
  "POC solution to add automating patching to organization"

Parameters:
  Env:
    Type: String
    AllowedValues:
      - 'Dev'
      - 'Test'
      - 'QA'
      - 'Prod'
    Default: 'Dev'
    Description: The Environment type for deployment.
  WindowsApproval:
    Type: Number
    Default: 7
    Description: The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline.
  RHELApproval:
    Type: Number
    Default: 7
    Description: The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline.
  AL2Approval:
    Type: Number
    Default: 7
    Description: The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline.
  Timeout:
    Type: Number
    Default: 1800
    Description: Defines the timeout for Patch Baseline success.
  WindowsMaintWindowSchedule:
    Type: String
    Default: cron(0 0 ? * THU#2 *)
    Description: The schedule of the maintenance window in the form of a cron or rate expression.
  RHELMaintWindowSchedule:
    Type: String
    Default: cron(0 0 ? * SUN#2 *)
    Description: The schedule of the maintenance window in the form of a cron or rate expression.
  AL2MaintWindowSchedule:
    Type: String
    Default: cron(0 0 ? * SAT#2 *)
    Description: The schedule of the maintenance window in the form of a cron or rate expression.
  ScanSchedule:
    Type: String
    Default: cron(15 23 ? * * *)
    Description: The schedule of the baseline scan in the form of a cron or rate expression.
  # LoggingBucket:
  #   Type: String
  #   Description: The S3 access logging bucket name.


Resources:
  WindowsPatchBaseline:
    Type: AWS::SSM::PatchBaseline
    Properties:
      ApprovalRules:
        PatchRules:
          - ApproveAfterDays: !Ref WindowsApproval
            ComplianceLevel: HIGH
            EnableNonSecurity: false
            PatchFilterGroup:
              PatchFilters:
                - Key: "PRODUCT"
                  Values:
                    - "*"
                - Key: CLASSIFICATION
                  Values:
                    - CriticalUpdates
                    - SecurityUpdates
                    - Updates
                - Key: MSRC_SEVERITY
                  Values:
                    - Critical
                    - Important
                    - Moderate
      Description: !Sub This patch baseline defines which patches are approved for installation on your instances in ${Env} environment.
      Name: !Sub Windows-${Env}-Baseline
      OperatingSystem: WINDOWS
      PatchGroups:
        - WINDOWS
      Tags:
      - Key: Example
        Value: True

  WindowsMaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    Properties:
      AllowUnassociatedTargets: true
      Cutoff: 1
      Description: Maintenance Window to install patch baseline
      Duration: 4
      Name: !Sub Windows-${Env}-Install-Baseline
      Schedule: !Ref WindowsMaintWindowSchedule
      ScheduleTimezone: GB
      Tags:
      - Key: Example
        Value: True

  WindowsMaintenanceWindowTarget:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties:
      WindowId: !Ref WindowsMaintenanceWindow
      ResourceType: INSTANCE
      Targets:
      - Key: tag:AutoPatch
        Values:
        - "True"
      - Key: tag:PatchGroup
        Values:
        - WINDOWS
      Name: !Sub Windows-${Env}-Install-Baseline
      Description: Maintenance Window to install patch baseline

  WindowsMaintenanceWindowTask:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      Name: !Sub Windows-${Env}-Install-Baseline
      Description: Apply OS patches on instances in target
      MaxConcurrency: 25%
      MaxErrors: 1
      Priority: 0
      TaskType: RUN_COMMAND
      WindowId:
        Ref: WindowsMaintenanceWindow
      TaskArn: AWS-RunPatchBaseline
      TaskInvocationParameters:
        MaintenanceWindowRunCommandParameters:
          OutputS3BucketName: !Ref S3Bucket
          OutputS3KeyPrefix: !Sub ${Env}/${AWS::AccountId}/Windows-Install-Baseline
          Parameters:
            Operation:
            - Install
            RebootOption:
            - RebootifNeeded
      Targets:
      - Key: WindowTargetIds
        Values:
        - Ref: WindowsMaintenanceWindowTarget

  RHELPatchBaseline:
    Type: AWS::SSM::PatchBaseline
    Properties:
      ApprovalRules:
        PatchRules:
          - ApproveAfterDays: !Ref RHELApproval
            ComplianceLevel: HIGH
            EnableNonSecurity: true
            PatchFilterGroup:
              PatchFilters:
                - Key: "PRODUCT"
                  Values:
                    - "*"
                - Key: CLASSIFICATION
                  Values:
                    - "*"
                - Key: SEVERITY
                  Values:
                    - Critical
                    - Important
                    - Moderate
      Description: !Sub This patch baseline defines which patches are approved for installation on your instances in ${Env} environment.
      Name: !Sub RHEL-${Env}-Baseline
      OperatingSystem: REDHAT_ENTERPRISE_LINUX
      PatchGroups:
        - REDHAT_ENTERPRISE_LINUX
      Tags:
      - Key: Example
        Value: True

  RHELMaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    Properties:
      AllowUnassociatedTargets: true
      Cutoff: 1
      Description: Maintenance Window to install patch baseline
      Duration: 4
      Name: !Sub RHEL-${Env}-Install-Baseline
      Schedule: !Ref RHELMaintWindowSchedule
      ScheduleTimezone: GB
      Tags:
      - Key: Example
        Value: True

  RHELMaintenanceWindowTarget:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties:
      WindowId: !Ref RHELMaintenanceWindow
      ResourceType: INSTANCE
      Targets:
      - Key: tag:AutoPatch
        Values:
        - "True"
      - Key: tag:PatchGroup
        Values:
        - REDHAT_ENTERPRISE_LINUX
      Name: !Sub RHEL-${Env}-Install-Baseline
      Description: Maintenance Window to install patch baseline

  RHELMaintenanceWindowTask:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      Name: !Sub RHEL-${Env}-Install-Baseline
      Description: Apply OS patches on instances in target
      MaxConcurrency: 25%
      MaxErrors: 1
      Priority: 0
      TaskType: RUN_COMMAND
      WindowId:
        Ref: RHELMaintenanceWindow
      TaskArn: AWS-RunPatchBaseline
      TaskInvocationParameters:
        MaintenanceWindowRunCommandParameters:
          OutputS3BucketName: !Ref S3Bucket
          OutputS3KeyPrefix: !Sub ${Env}/${AWS::AccountId}/RHEL-Install-Baseline
          Parameters:
            Operation:
            - Install
            RebootOption:
            - RebootifNeeded
      Targets:
      - Key: WindowTargetIds
        Values:
        - Ref: RHELMaintenanceWindowTarget

  AL2PatchBaseline:
    Type: AWS::SSM::PatchBaseline
    Properties:
      ApprovalRules:
        PatchRules:
          - ApproveAfterDays: !Ref AL2Approval
            ComplianceLevel: HIGH
            EnableNonSecurity: true
            PatchFilterGroup:
              PatchFilters:
                - Key: "PRODUCT"
                  Values:
                    - "*"
                - Key: CLASSIFICATION
                  Values:
                    - "*"
                - Key: SEVERITY
                  Values:
                    - Critical
                    - Important
                    - Medium
      Description: !Sub This patch baseline defines which patches are approved for installation on your instances in ${Env} environment.
      Name: !Sub AL2-${Env}-Baseline
      OperatingSystem: AMAZON_LINUX_2
      PatchGroups:
        - AMAZON_LINUX_2
      Tags:
      - Key: Example
        Value: True

  AL2MaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    Properties:
      AllowUnassociatedTargets: true
      Cutoff: 1
      Description: Maintenance Window to install patch baseline
      Duration: 4
      Name: !Sub AL2-${Env}-Install-Baseline
      Schedule: !Ref AL2MaintWindowSchedule
      ScheduleTimezone: GB
      Tags:
      - Key: Example
        Value: True

  AL2MaintenanceWindowTarget:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties:
      WindowId: !Ref AL2MaintenanceWindow
      ResourceType: INSTANCE
      Targets:
      - Key: tag:AutoPatch
        Values:
        - "True"
      - Key: tag:PatchGroup
        Values:
        - AMAZON_LINUX_2
      Name: !Sub AL2-${Env}-Install-Baseline
      Description: Maintenance Window to install patch baseline

  AL2MaintenanceWindowTask:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      Name: !Sub AL2-${Env}-Install-Baseline
      Description: Apply OS patches on instances in target
      MaxConcurrency: 25%
      MaxErrors: 1
      Priority: 0
      TaskType: RUN_COMMAND
      WindowId:
        Ref: AL2MaintenanceWindow
      TaskArn: AWS-RunPatchBaseline
      TaskInvocationParameters:
        MaintenanceWindowRunCommandParameters:
          OutputS3BucketName: !Ref S3Bucket
          OutputS3KeyPrefix: !Sub ${Env}/${AWS::AccountId}/AL2-Install-Baseline
          Parameters:
            Operation:
            - Install
            RebootOption:
            - RebootifNeeded
      Targets:
      - Key: WindowTargetIds
        Values:
        - Ref: AL2MaintenanceWindowTarget

  AllScanPatchBaselineAssociation:
    Type: AWS::SSM::Association
    Properties:
      AssociationName: !Sub All-OS-${Env}-Scan-Baseline
      Name: AWS-RunPatchBaseline
      ScheduleExpression: !Ref ScanSchedule 
      OutputLocation:
        S3Location:
          OutputS3BucketName: !Ref S3Bucket
          OutputS3KeyPrefix: !Sub ${Env}/${AWS::AccountId}/All-OS-Scan-Baseline
      Parameters:
        Operation:
          - Scan
      Targets:
      - Key: tag:PatchGroup
        Values:
        - REDHAT_ENTERPRISE_LINUX
        - WINDOWS
        - AMAZON_LINUX_2
      WaitForSuccessTimeoutSeconds: 300

  AllInstallPatchBaselineAssociation:
    Type: AWS::SSM::Association
    Properties:
      Name: AWS-RunPatchBaseline
      AssociationName: !Sub All-OS-${Env}-Install-Baseline
      MaxConcurrency: 25%
      MaxErrors: 1
      OutputLocation:
        S3Location:
          OutputS3BucketName: !Ref S3Bucket
          OutputS3KeyPrefix: !Sub ${Env}/${AWS::AccountId}/All-OS-Install-Baseline
      Parameters:
        Operation:
          - Install
        RebootOption:
          - RebootIfNeeded
      Targets:
      - Key: tag:PatchGroup
        Values:
        - REDHAT_ENTERPRISE_LINUX
        - WINDOWS
        - AMAZON_LINUX_2
      WaitForSuccessTimeoutSeconds: 300

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub ${AWS::AccountId}-${AWS::Region}-install-baseline-logs
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: "aws:kms"
              KMSMasterKeyID: !GetAtt S3BucketKey.Arn
      VersioningConfiguration:
        Status: "Enabled"
      # LoggingConfiguration:
      #   DestinationBucketName: !Ref LoggingBucket
      #   LogFilePrefix: !Sub ${Env}/${AWS::AccountId}/${AWS::Region}/install-baseline-logs
      Tags:
      - Key: Example
        Value: True
    DeletionPolicy: Delete

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - "s3:*"
            Effect: Deny
            Resource:
              - !GetAtt S3Bucket.Arn
              - !Sub ${S3Bucket.Arn}/*
            Principal: '*'
            Condition:
              Bool:
                "aws:SecureTransport": "false"

  S3BucketKey:
    Type: 'AWS::KMS::Key'
    Properties:
      EnableKeyRotation: true
      PendingWindowInDays: 14
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: 
              - !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: 'kms:*'
            Resource: '*'
      Tags:
      - Key: Example
        Value: True

  S3BucketKeyAlias:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: alias/patch-manager-s3-logs
      TargetKeyId: !Ref S3BucketKey

# Outputs: