AWSTemplateFormatVersion: '2010-09-09'
Description: >
  "POC solution to add automating patching to organization"

Parameters:
  Env:
    Type: String
    AllowedValues:
      - 'Dev'
      - 'Test'
      - 'QA'
      - 'Prod'
    Default: 'Dev'
    Description: The Environment type for deployment.
  WindowsApproval:
    Type: Number
    Default: 7
    Description: The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline.
  RHELApproval:
    Type: Number
    Default: 7
    Description: The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline.
  AL2Approval:
    Type: Number
    Default: 7
    Description: The number of days after the release date of each patch matched by the rule that the patch is marked as approved in the patch baseline.
  Timeout:
    Type: Number
    Default: 3600
    Description: Defines the timeout for Patch Baseline success.
  WindowsMaintWindowSchedule:
    Type: String
    Default: cron(0 0 ? * THU#2 *)
    Description: The schedule of the maintenance window in the form of a cron or rate expression.
  RHELMaintWindowSchedule:
    Type: String
    Default: cron(0 0 ? * SUN#2 *)
    Description: The schedule of the maintenance window in the form of a cron or rate expression.
  AL2MaintWindowSchedule:
    Type: String
    Default: cron(0 0 ? * SAT#2 *)
    Description: The schedule of the maintenance window in the form of a cron or rate expression.
  ScanSchedule:
    Type: String
    Default: cron(15 23 ? * * *)
    Description: The schedule of the baseline scan in the form of a cron or rate expression.


Resources:
  WindowsPatchBaseline:
    Type: AWS::SSM::PatchBaseline
    Properties:
      ApprovalRules:
        PatchRules:
          - ApproveAfterDays: !Ref WindowsApproval
            ComplianceLevel: HIGH
            EnableNonSecurity: false
            PatchFilterGroup:
              PatchFilters:
                - Key: "PRODUCT"
                  Values:
                    - "*"
                - Key: CLASSIFICATION
                  Values:
                    - CriticalUpdates
                    - SecurityUpdates
                    - Updates
                - Key: MSRC_SEVERITY
                  Values:
                    - Critical
                    - Important
                    - Moderate
      Description: !Sub This patch baseline defines which patches are approved for installation on your instances in ${Env} environment.
      Name: !Sub Windows-${Env}-Baseline
      OperatingSystem: WINDOWS
      PatchGroups:
        - WINDOWS

  WindowsMaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    Properties:
      AllowUnassociatedTargets: true
      Cutoff: 1
      Description: Maintenance Window to install patch baseline
      Duration: 4
      Name: !Sub Windows-${Env}-Install-Baseline
      Schedule: !Ref WindowsMaintWindowSchedule
      ScheduleTimezone: GB

  WindowsMaintenanceWindowTarget:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties:
      WindowId: !Ref WindowsMaintenanceWindow
      ResourceType: INSTANCE
      Targets:
      - Key: tag:Auto_Patch
        Values:
        - "true"
      - Key: tag:PatchGroup
        Values:
        - WINDOWS
      Name: !Sub Windows-${Env}-Install-Baseline
      Description: Maintenance Window to install patch baseline

  WindowsMaintenanceWindowTask:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      Name: !Sub Windows-${Env}-Install-Baseline
      Description: Apply OS patches on instances in target
      MaxConcurrency: 25%
      MaxErrors: 1
      Priority: 0
      TaskType: RUN_COMMAND
      WindowId:
        Ref: WindowsMaintenanceWindow
      TaskArn: AWS-RunPatchBaseline
      TaskInvocationParameters:
        MaintenanceWindowRunCommandParameters:
          OutputS3BucketName: !Ref S3Bucket
          OutputS3KeyPrefix: !Sub ${Env}/${AWS::AccountId}/Windows-Install-Baseline
          Parameters:
            Operation:
            - Install
            RebootOption:
            - RebootifNeeded
      Targets:
      - Key: WindowTargetIds
        Values:
        - Ref: WindowsMaintenanceWindowTarget

  RHELPatchBaseline:
    Type: AWS::SSM::PatchBaseline
    Properties:
      ApprovalRules:
        PatchRules:
          - ApproveAfterDays: !Ref RHELApproval
            ComplianceLevel: HIGH
            EnableNonSecurity: true
            PatchFilterGroup:
              PatchFilters:
                - Key: "PRODUCT"
                  Values:
                    - "*"
                - Key: CLASSIFICATION
                  Values:
                    - "*"
                - Key: SEVERITY
                  Values:
                    - Critical
                    - Important
                    - Moderate
      Description: !Sub This patch baseline defines which patches are approved for installation on your instances in ${Env} environment.
      Name: !Sub RHEL-${Env}-Baseline
      OperatingSystem: REDHAT_ENTERPRISE_LINUX
      PatchGroups:
        - REDHAT_ENTERPRISE_LINUX

  RHELMaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    Properties:
      AllowUnassociatedTargets: true
      Cutoff: 1
      Description: Maintenance Window to install patch baseline
      Duration: 4
      Name: !Sub RHEL-${Env}-Install-Baseline
      Schedule: !Ref RHELMaintWindowSchedule
      ScheduleTimezone: GB

  RHELMaintenanceWindowTarget:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties:
      WindowId: !Ref RHELMaintenanceWindow
      ResourceType: INSTANCE
      Targets:
      - Key: tag:Auto_Patch
        Values:
        - "true"
      - Key: tag:PatchGroup
        Values:
        - REDHAT_ENTERPRISE_LINUX
      Name: !Sub RHEL-${Env}-Install-Baseline
      Description: Maintenance Window to install patch baseline

  RHELMaintenanceWindowTask:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      Name: !Sub RHEL-${Env}-Install-Baseline
      Description: Apply OS patches on instances in target
      MaxConcurrency: 25%
      MaxErrors: 1
      Priority: 0
      TaskType: RUN_COMMAND
      WindowId:
        Ref: RHELMaintenanceWindow
      TaskArn: AWS-RunPatchBaseline
      TaskInvocationParameters:
        MaintenanceWindowRunCommandParameters:
          OutputS3BucketName: !Ref S3Bucket
          OutputS3KeyPrefix: !Sub ${Env}/${AWS::AccountId}/RHEL-Install-Baseline
          Parameters:
            Operation:
            - Install
            RebootOption:
            - RebootifNeeded
      Targets:
      - Key: WindowTargetIds
        Values:
        - Ref: RHELMaintenanceWindowTarget

  AL2PatchBaseline:
    Type: AWS::SSM::PatchBaseline
    Properties:
      ApprovalRules:
        PatchRules:
          - ApproveAfterDays: !Ref AL2Approval
            ComplianceLevel: HIGH
            EnableNonSecurity: true
            PatchFilterGroup:
              PatchFilters:
                - Key: "PRODUCT"
                  Values:
                    - "*"
                - Key: CLASSIFICATION
                  Values:
                    - "*"
                - Key: SEVERITY
                  Values:
                    - Critical
                    - Important
                    - Medium
      Description: !Sub This patch baseline defines which patches are approved for installation on your instances in ${Env} environment.
      Name: !Sub AL2-${Env}-Baseline
      OperatingSystem: AMAZON_LINUX_2
      PatchGroups:
        - AMAZON_LINUX_2

  AL2MaintenanceWindow:
    Type: AWS::SSM::MaintenanceWindow
    Properties:
      AllowUnassociatedTargets: true
      Cutoff: 1
      Description: Maintenance Window to install patch baseline
      Duration: 4
      Name: !Sub AL2-${Env}-Install-Baseline
      Schedule: !Ref AL2MaintWindowSchedule
      ScheduleTimezone: GB

  AL2MaintenanceWindowTarget:
    Type: AWS::SSM::MaintenanceWindowTarget
    Properties:
      WindowId: !Ref AL2MaintenanceWindow
      ResourceType: INSTANCE
      Targets:
      - Key: tag:Auto_Patch
        Values:
        - "true"
      - Key: tag:PatchGroup
        Values:
        - AMAZON_LINUX_2
      Name: !Sub AL2-${Env}-Install-Baseline
      Description: Maintenance Window to install patch baseline

  AL2MaintenanceWindowTask:
    Type: AWS::SSM::MaintenanceWindowTask
    Properties:
      Name: !Sub AL2-${Env}-Install-Baseline
      Description: Apply OS patches on instances in target
      MaxConcurrency: 25%
      MaxErrors: 1
      Priority: 0
      TaskType: RUN_COMMAND
      WindowId:
        Ref: AL2MaintenanceWindow
      TaskArn: AWS-RunPatchBaseline
      TaskInvocationParameters:
        MaintenanceWindowRunCommandParameters:
          OutputS3BucketName: !Ref S3Bucket
          OutputS3KeyPrefix: !Sub ${Env}/${AWS::AccountId}/AL2-Install-Baseline
          Parameters:
            Operation:
            - Install
            RebootOption:
            - RebootifNeeded
      Targets:
      - Key: WindowTargetIds
        Values:
        - Ref: AL2MaintenanceWindowTarget

  AllScanPatchBaselineAssociation:
    Type: AWS::SSM::Association
    Properties:
      AssociationName: !Sub All-OS-${Env}-Scan-Baseline
      Name: AWS-RunPatchBaseline
      ScheduleExpression: !Ref ScanSchedule 
      OutputLocation:
        S3Location:
          OutputS3BucketName: !Ref S3Bucket
          OutputS3KeyPrefix: !Sub ${Env}/${AWS::AccountId}/All-OS-Scan-Baseline
      Parameters:
        Operation:
          - Scan
      Targets:
      - Key: tag:PatchGroup
        Values:
        - REDHAT_ENTERPRISE_LINUX
        - WINDOWS
        - AMAZON_LINUX_2
      WaitForSuccessTimeoutSeconds: !Ref Timeout

  AllInstallPatchBaselineAssociation:
    Type: AWS::SSM::Association
    Properties:
      Name: AWS-RunPatchBaseline
      AssociationName: !Sub All-OS-${Env}-Install-Baseline
      MaxConcurrency: 25%
      MaxErrors: 1
      OutputLocation:
        S3Location:
          OutputS3BucketName: !Ref S3Bucket
          OutputS3KeyPrefix: !Sub ${Env}/${AWS::AccountId}/All-OS-Install-Baseline
      Parameters:
        Operation:
          - Install
        RebootOption:
          - RebootIfNeeded
      Targets:
      - Key: tag:PatchGroup
        Values:
        - REDHAT_ENTERPRISE_LINUX
        - WINDOWS
        - AMAZON_LINUX_2
      WaitForSuccessTimeoutSeconds: !Ref Timeout

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub ${AWS::AccountId}-${AWS::Region}-install-baseline-logs
      AccessControl: Private
      
  # WindowsDefaultBaselineCustomResource:
  #   Type: "Custom::DefaultPatchBaseline"
  #   Properties:
  #     PatchBaselinId:
  #       Ref: "WindowsPatchBaseline"
  #     OperatingSystem: "WINDOWS"
  #     ServiceToken:
  #       Fn::GetAtt:
  #         - "DefaultBaselineLambda"
  #         - "Arn"

  # RHELDefaultBaselineCustomResource:
  #   Type: "Custom::DefaultPatchBaseline"
  #   Properties:
  #     PatchBaselinId:
  #       Ref: "RHELPatchBaseline"
  #     OperatingSystem: "REDHAT_ENTERPRISE_LINUX"
  #     ServiceToken:
  #       Fn::GetAtt:
  #         - "DefaultBaselineLambda"
  #         - "Arn"

  # AL2DefaultBaselineCustomResource:
  #   Type: "Custom::DefaultPatchBaseline"
  #   Properties:
  #     PatchBaselinId:
  #       Ref: "AL2PatchBaseline"
  #     OperatingSystem: "AMAZON_LINUX_2"
  #     ServiceToken:
  #       Fn::GetAtt:
  #         - "DefaultBaselineLambda"
  #         - "Arn"

  # CustomResourceIamRole:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Principal:
  #             Service: "lambda.amazonaws.com"
  #           Action:
  #             - "sts:AssumeRole"
  #     Path: "/"
  #     ManagedPolicyArns: []
  #     Policies:
  #       - PolicyName: "ssm-patch-baseline"
  #         PolicyDocument:
  #           Statement:
  #             - Effect: "Allow"
  #               Action:
  #                 - "ssm:DescribePatchBaselines"
  #                 - "ssm:RegisterDefaultPatchBaseline"
  #               Resource: "*"

  # DefaultBaselineLambda:
  #   Type: "AWS::Lambda::Function"
  #   Properties:
  #     Code:
  #       ZipFile: "'use strict';\nconst AWS = require('aws-sdk');\nconst response = require('./cfn-response');\nconst ssm = new AWS.SSM();\n\nexports.handler = (event, context, cb) => {\n  console.log('Invoke:', JSON.stringify(event));\n  const done = (err, data) => {\n    if (err) {\n      console.log('Error: ', err);\n      response.send(event, context, response.FAILED, {}, 'CustomResourcePhysicalID');\n    } else {\n      console.log('Data: ', data)\n      response.send(event, context, response.SUCCESS, {}, 'CustomResourcePhysicalID');\n    }\n  };\n\n  if (event.RequestType === 'Create' || event.RequestType === 'Update') {\n    ssm.registerDefaultPatchBaseline({\n        BaselineId: event.ResourceProperties.PatchBaselinId\n    }, done)\n\n  }\n  else if (event.RequestType === 'Delete'){\n    // on delete, the patch baseline is set to the default AWS patch baseline (For windows, there are three default patch baselines, the 'AWS-DefaultPatchBaseline' is selected)\n    ssm.describePatchBaselines({\n        Filters: [{Key:'OWNER', Values:['AWS']}]\n    }, function(err,data){\n        if (err) done(err,data)\n        else {\n            const defaultPatchBaselines = data.BaselineIdentities.filter((baseline) => baseline.OperatingSystem === event.ResourceProperties.OperatingSystem)\n            \n            \n            \n            ssm.registerDefaultPatchBaseline({\n                BaselineId: (event.ResourceProperties.OperatingSystem === 'WINDOWS')\n                                ? defaultPatchBaselines.filter((baseline) => baseline.BaselineName === 'AWS-DefaultPatchBaseline')[0].BaselineId\n                                : defaultPatchBaselines[0].BaselineId\n            }, done)\n            \n        }\n    })\n  }\n};\n"
  #     Handler: "index.handler"
  #     MemorySize: 128
  #     Role:
  #       Fn::GetAtt:
  #         - "CustomResourceIamRole"
  #         - "Arn"
  #     Runtime: "nodejs16.x"
  #     Timeout: 120
# Outputs: